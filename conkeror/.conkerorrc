url_remoting_fn = load_url_in_new_buffer;
xkcd_add_title = true;

require("duckduckgo");
define_opensearch_webjump("ddg", "duckduckgo.xml");

// Esperanto
define_webjump("revo", "http://reta-vortaro.de/cgi-bin/sercxu.pl?cx=1&sercxata=%s");
define_webjump("sonja", "http://kisa.ca/vortaro/search.php?someaction=search&word=%s");

// English
define_webjump("dict","http://www.thefreedictionary.com/%s");
delete webjumps.dictionary;

// Wikipedia
require("page-modes/wikipedia.js");
wikipedia_webjumps_format = "wp-%s"; // controls the names of the webjumps.  default is "wikipedia-%s".
define_wikipedia_webjumps("en", "de", "eo");

// Show favicons
require("favicon");
add_hook("mode_line_hook", mode_line_adder(buffer_icon_widget), true); // show in mode line
read_buffer_show_icons = true; // show in completions list

define_browser_object_class(
    "history-url", null,
    function (I, prompt) {
        check_buffer (I.buffer, content_buffer);
        var result = yield I.buffer.window.minibuffer.read_url(
            $prompt = prompt,  $use_webjumps = false, $use_history = true, $use_bookmarks = false);
        yield co_return (result);
    });

interactive("find-url-from-history",
            "Find a page from history in the current buffer",
            "find-url",
            $browser_object = browser_object_history_url);

interactive("find-url-from-history-new-buffer",
            "Find a page from history in the current buffer",
            "find-url-new-buffer",
            $browser_object = browser_object_history_url);

define_key(content_buffer_normal_keymap, "h", "find-url-from-history-new-buffer");
define_key(content_buffer_normal_keymap, "H", "find-url-from-history");
